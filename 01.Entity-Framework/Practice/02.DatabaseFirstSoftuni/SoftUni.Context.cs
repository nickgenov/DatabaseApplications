//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _02.DatabaseFirstSoftuni
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SoftUniEntities2 : DbContext
    {
        public SoftUniEntities2()
            : base("name=SoftUniEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Group> Groups { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<SeniorStaff> SeniorStaffs { get; set; }
        public virtual DbSet<Town> Towns { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        [DbFunction("SoftUniEntities2", "ufn_EmployeeNamesForJobTitle")]
        public virtual IQueryable<ufn_EmployeeNamesForJobTitle_Result> ufn_EmployeeNamesForJobTitle(string jobTitle)
        {
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("JobTitle", jobTitle) :
                new ObjectParameter("JobTitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_EmployeeNamesForJobTitle_Result>("[SoftUniEntities2].[ufn_EmployeeNamesForJobTitle](@JobTitle)", jobTitleParameter);
        }
    
        [DbFunction("SoftUniEntities2", "ufn_ListEmployees")]
        public virtual IQueryable<ufn_ListEmployees_Result> ufn_ListEmployees(string format)
        {
            var formatParameter = format != null ?
                new ObjectParameter("Format", format) :
                new ObjectParameter("Format", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_ListEmployees_Result>("[SoftUniEntities2].[ufn_ListEmployees](@Format)", formatParameter);
        }
    
        public virtual int usp_AddCustomer(string firstName, string lastName, string manager)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var managerParameter = manager != null ?
                new ObjectParameter("Manager", manager) :
                new ObjectParameter("Manager", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddCustomer", firstNameParameter, lastNameParameter, managerParameter);
        }
    
        public virtual int usp_AddNumbers(Nullable<int> firstNumber, Nullable<int> secondNumber, ObjectParameter result)
        {
            var firstNumberParameter = firstNumber.HasValue ?
                new ObjectParameter("FirstNumber", firstNumber) :
                new ObjectParameter("FirstNumber", typeof(int));
    
            var secondNumberParameter = secondNumber.HasValue ?
                new ObjectParameter("SecondNumber", secondNumber) :
                new ObjectParameter("SecondNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddNumbers", firstNumberParameter, secondNumberParameter, result);
        }
    
        public virtual int usp_AddSeniorStaff(string firstName, string lastName, Nullable<int> yearsWorked)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var yearsWorkedParameter = yearsWorked.HasValue ?
                new ObjectParameter("YearsWorked", yearsWorked) :
                new ObjectParameter("YearsWorked", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddSeniorStaff", firstNameParameter, lastNameParameter, yearsWorkedParameter);
        }
    
        public virtual ObjectResult<usp_ManagersBySeniority_Result> usp_ManagersBySeniority(Nullable<int> minYears, Nullable<int> maxYears)
        {
            var minYearsParameter = minYears.HasValue ?
                new ObjectParameter("MinYears", minYears) :
                new ObjectParameter("MinYears", typeof(int));
    
            var maxYearsParameter = maxYears.HasValue ?
                new ObjectParameter("MaxYears", maxYears) :
                new ObjectParameter("MaxYears", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ManagersBySeniority_Result>("usp_ManagersBySeniority", minYearsParameter, maxYearsParameter);
        }
    
        public virtual int usp_NewCustomer(string firstName, string lastName, string manager, Nullable<System.DateTime> date)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var managerParameter = manager != null ?
                new ObjectParameter("Manager", manager) :
                new ObjectParameter("Manager", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NewCustomer", firstNameParameter, lastNameParameter, managerParameter, dateParameter);
        }
    
        public virtual int usp_NewEmployee(string firstName, string lastName, string jobTitle, Nullable<int> deptId, Nullable<decimal> salary)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("jobTitle", jobTitle) :
                new ObjectParameter("jobTitle", typeof(string));
    
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("deptId", deptId) :
                new ObjectParameter("deptId", typeof(int));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NewEmployee", firstNameParameter, lastNameParameter, jobTitleParameter, deptIdParameter, salaryParameter);
        }
    
        public virtual ObjectResult<usp_SelectEmployeesBySeniority_Result> usp_SelectEmployeesBySeniority(Nullable<int> minYears)
        {
            var minYearsParameter = minYears.HasValue ?
                new ObjectParameter("MinYears", minYears) :
                new ObjectParameter("MinYears", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectEmployeesBySeniority_Result>("usp_SelectEmployeesBySeniority", minYearsParameter);
        }
    
        public virtual ObjectResult<usp_SelectEmployeesWithManager_Result> usp_SelectEmployeesWithManager()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectEmployeesWithManager_Result>("usp_SelectEmployeesWithManager");
        }
    
        public virtual ObjectResult<usp_SelectEmployeesWithoutManager_Result> usp_SelectEmployeesWithoutManager()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectEmployeesWithoutManager_Result>("usp_SelectEmployeesWithoutManager");
        }
    }
}
